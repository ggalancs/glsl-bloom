!function e(n,t,i){function r(u,a){if(!t[u]){if(!n[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(o)return o(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var c=t[u]={exports:{}};n[u][0].call(c.exports,function(e){var t=n[u][1][e];return r(t?t:e)},c,c.exports,e,n,t,i)}return t[u].exports}for(var o="function"==typeof require&&require,u=0;u<i.length;u++)r(i[u]);return r}({1:[function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}var r=e("./modules/bloom/bloom.js"),o=i(r),u=e("./modules/sphere.js"),a=i(u),s=document.getElementById("canvas-webgl"),l=new THREE.WebGLRenderer({antialias:!0,canvas:s}),c=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight),f=new THREE.Scene,h=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e4),v=new THREE.Clock,d=new Stats,m=new o["default"](c.texture),g=new a["default"],w=function(){s.width=window.innerWidth,s.height=window.innerHeight,h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),l.setSize(window.innerWidth,window.innerHeight),c.setSize(window.innerWidth,window.innerHeight),m.resize(),g.resize()},p=function(){$(window).on("resize",function(){w()})},b=function(){var e=new dat.GUI,n={blurCount:e.add(m,"blurCount",1,10).name("blur count").step(1),minBright:e.add(m.plane.bright,"minBright",0,1).name("min bright"),strength:e.add(m.plane.bloom,"strength",0,3).name("bright strength"),tone:e.add(m.plane.bloom,"tone",0,1).name("original tone")};n.minBright.onChange(function(e){m.plane.bright.uniforms.minBright.value=e}),n.strength.onChange(function(e){m.plane.bloom.uniforms.strength.value=e}),n.tone.onChange(function(e){m.plane.bloom.uniforms.tone.value=e})},E=function(){d.showPanel(0),document.body.appendChild(d.dom)},y=function(){g.render(v.getDelta()),l.render(f,h,c),m.render(l)},x=function H(){d.begin(),y(),d.end(),requestAnimationFrame(H)},T=function(){l.setSize(window.innerWidth,window.innerHeight),l.setClearColor(2236962,1),h.position.set(1e3,1e3,1e3),h.lookAt(new THREE.Vector3),f.add(g.mesh),p(),b(),E(),w(),x()};T()},{"./modules/bloom/bloom.js":2,"./modules/sphere.js":6}],2:[function(e,n,t){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),u=e("./plane_bright.js"),a=i(u),s=e("./plane_blur.js"),l=i(s),c=e("./plane_bloom.js"),f=i(c),h=function(){function e(n){r(this,e),this.blurCount=3,this.renderTarget=[new THREE.WebGLRenderTarget(window.innerWidth/10,window.innerHeight/10),new THREE.WebGLRenderTarget(window.innerWidth/10,window.innerHeight/10)],this.scene={bright:new THREE.Scene,blurh:new THREE.Scene,blurv:new THREE.Scene,bloom:new THREE.Scene},this.camera=new THREE.PerspectiveCamera(45,1,1,2),this.plane={bright:new a["default"](n),blurh:new l["default"](this.renderTarget[0].texture,new THREE.Vector2(1,0)),blurv:new l["default"](this.renderTarget[1].texture,new THREE.Vector2(0,1)),bloom:new f["default"](n,this.renderTarget[0].texture)},this.init()}return o(e,[{key:"init",value:function(){this.scene.bright.add(this.plane.bright.mesh),this.scene.blurh.add(this.plane.blurh.mesh),this.scene.blurv.add(this.plane.blurv.mesh),this.scene.bloom.add(this.plane.bloom.mesh)}},{key:"render",value:function(e){e.render(this.scene.bright,this.camera,this.renderTarget[0]);for(var n=0;n<this.blurCount;n++)e.render(this.scene.blurh,this.camera,this.renderTarget[1]),e.render(this.scene.blurv,this.camera,this.renderTarget[0]);e.render(this.scene.bloom,this.camera)}},{key:"resize",value:function(){this.renderTarget[0].setSize(window.innerWidth/10,window.innerHeight/10),this.renderTarget[1].setSize(window.innerWidth/10,window.innerHeight/10),this.plane.blurh.resize(),this.plane.blurv.resize()}}]),e}();t["default"]=h},{"./plane_bloom.js":3,"./plane_blur.js":4,"./plane_bright.js":5}],3:[function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(){function e(n,t){i(this,e),this.uniforms=null,this.tone=.7,this.strength=1,this.texBase=n,this.texBlur=t,this.mesh=this.createMesh()}return r(e,[{key:"createMesh",value:function(){return this.uniforms={tone:{type:"f",value:this.tone},strength:{type:"f",value:this.strength},texBase:{type:"t",value:this.texBase},texBlur:{type:"t",value:this.texBlur}},new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float tone;\nuniform float strength;\nuniform sampler2D texBase;\nuniform sampler2D texBlur;\n\nvarying vec2 vUv;\n\nvoid main(void) {\n  gl_FragColor = texture2D(texBase, vUv) * tone + texture2D(texBlur, vUv) * strength;\n}\n"}))}}]),e}();t["default"]=o},{}],4:[function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(){function e(n,t){i(this,e),this.uniforms=null,this.texture=n,this.direction=t,this.mesh=this.createMesh()}return r(e,[{key:"createMesh",value:function(){return this.uniforms={resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth/10,window.innerHeight/10)},direction:{type:"v2",value:this.direction},texture:{type:"t",value:this.texture}},new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform vec2 resolution;\nuniform vec2 direction;\nuniform sampler2D texture;\nuniform float weight[10];\n\nvarying vec2 vUv;\n\nvec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture2D(image, uv) * 0.1964825501511404;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture2D(image, uv) * 0.2270270270;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3333333333333333) * direction;\n  color += texture2D(image, uv) * 0.29411764705882354;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n  return color; \n}\n\nfloat gaussianPdf(in float x, in float sigma) {\n  return 0.39894 * exp( -0.5 * x * x/(sigma * sigma))/sigma;\n}\n\nvoid main(void) {\n  gl_FragColor = blur9(texture, vUv, resolution, direction);\n}\n"}))}},{key:"resize",value:function(){this.uniforms.resolution.value.set(window.innerWidth/10,window.innerHeight/10)}}]),e}();t["default"]=o},{}],5:[function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(){function e(n){i(this,e),this.uniforms=null,this.minBright=.2,this.texture=n,this.mesh=this.createMesh()}return r(e,[{key:"createMesh",value:function(){return this.uniforms={minBright:{type:"f",value:this.minBright},texture:{type:"t",value:this.texture}},new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main(void) {\n  vUv = uv;\n  gl_Position = vec4(position, 1.0);\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float minBright;\nuniform sampler2D texture;\n\nvarying vec2 vUv;\n\nvoid main(void) {\n  vec3 bright = max(vec3(0.0), (texture2D(texture, vUv) - minBright).rgb);\n  gl_FragColor = vec4(bright, 1.0);\n}\n"}))}}]),e}();t["default"]=o},{}],6:[function(e,n,t){"use strict";function i(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),o=function(){function e(){i(this,e),this.radius=200,this.uniforms=null,this.mesh=this.createMesh()}return r(e,[{key:"createMesh",value:function(){return this.uniforms={time:{type:"f",value:0},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)},radius:{type:"f",value:this.radius}},new THREE.Mesh(new THREE.BoxGeometry(2,2,2),new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:"#define GLSLIFY 1\nuniform float radius;\n\nvarying vec4 vPosition;\n\nmat4 scaleMatrix(vec3 scale) {\n  return mat4(\n    scale.x, 0.0, 0.0, 0.0,\n    0.0, scale.y, 0.0, 0.0,\n    0.0, 0.0, scale.z, 0.0,\n    0.0, 0.0, 0.0, 1.0\n  );\n}\n\nvoid main(void) {\n  vec4 update_position = scaleMatrix(vec3(radius)) * vec4(position, 1.0);\n  vPosition = update_position;\n  gl_Position = projectionMatrix * modelViewMatrix * update_position;\n}\n",fragmentShader:"#define GLSLIFY 1\nuniform float radius;\n\nvarying vec4 vPosition;\n\nvoid main(void) {\n  float light = (-vPosition.y / radius + 1.0) / 10.0;\n  vec3 color = vec3(0.8) - light;\n  gl_FragColor = vec4(color, 1.0);\n}\n"}))}},{key:"render",value:function(e){this.uniforms.time.value+=e*this.time}},{key:"resize",value:function(){this.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)}}]),e}();t["default"]=o},{}]},{},[1]);